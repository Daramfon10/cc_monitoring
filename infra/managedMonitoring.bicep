targetScope = 'resourceGroup'

param grafanaName string
param monitorName string
//param umiName string
param location string
param principalUserId string

var roleDefinitionIds = {
  GrafanaAdmin: '22926164-76b3-42b3-bc55-97df8dab3e41'
  MonitoringMetricsPublisher: '3913510d-42f4-4e42-8a64-420c390055eb'
  MonitoringDataReader: 'b0d8363b-8ddd-447d-831f-62ca05bff136'
}

// Create an Azure Monitor Workspace
resource azureMonitorWorkspace 'microsoft.monitor/accounts@2023-04-03' = {
  name: monitorName
  location: location
  properties: {
    publicNetworkAccess: 'Enabled'
  }
}

// Create an Azure Grafana instance linked to the Azure Monitor Workspace
resource grafana 'Microsoft.Dashboard/grafana@2024-10-01' = {
  identity: {
    type: 'SystemAssigned'
  }
  location: location
  name: grafanaName
  properties: {
    apiKey: 'Disabled'
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    deterministicOutboundIP: 'Disabled'
    grafanaIntegrations: {
      azureMonitorWorkspaceIntegrations: [
        {
          azureMonitorWorkspaceResourceId: azureMonitorWorkspace.id
        }
      ]
    }
    grafanaMajorVersion: '11'
    publicNetworkAccess: 'Enabled'
    zoneRedundancy: 'Disabled'
  }
  sku: {
    name: 'Standard'
  }
}

// Assign the Monitoring Data Reader role to the Grafana instance
resource role_grafanaWorkspaceReader 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  name: guid(grafana.id, roleDefinitionIds.MonitoringDataReader, azureMonitorWorkspace.id)
  properties: {
    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions' , roleDefinitionIds.MonitoringDataReader)
    principalId: grafana.identity.principalId
  }
  scope: azureMonitorWorkspace
}

// Add Grafana Admin role assignment to the principalUserId
// This is needed to allow the user to manage the Grafana instance
// The principalUserId should be the object ID of the user or service principal
// who will be managing the Grafana instance
resource roleAssignment 'Microsoft.Authorization/roleAssignments@2022-04-01' = {
  name: guid(resourceGroup().id, principalUserId)
  properties: {
    roleDefinitionId: subscriptionResourceId('Microsoft.Authorization/roleDefinitions', roleDefinitionIds.GrafanaAdmin)
    principalId: principalUserId
  }
}

// Retrieve the ingestion endpoint for metrics
module ingestionEndpoint './ingestionEndpoint.bicep' = {
  name: 'ingestionEndpoint'
  params: {
    dceResourceId: azureMonitorWorkspace.properties.defaultIngestionSettings.dataCollectionEndpointResourceId
    dcrResourceId: azureMonitorWorkspace.properties.defaultIngestionSettings.dataCollectionRuleResourceId
  }
}

output metricsIngestionEndpoint string = ingestionEndpoint.outputs.metricsIngestionEndpoint
output dcrResourceId string = azureMonitorWorkspace.properties.defaultIngestionSettings.dataCollectionRuleResourceId
output grafanaName string = grafana.name
